// <auto-generated />
using System;
using Conta_Certa.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Conta_Certa.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250930184558_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Conta_Certa.Models.Cliente", b =>
                {
                    b.Property<string>("Documento")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Honorario")
                        .HasColumnType("REAL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VencimentoHonorario")
                        .HasColumnType("INTEGER");

                    b.HasKey("Documento");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Conta_Certa.Models.Cobranca", b =>
                {
                    b.Property<long>("IdCobranca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentoCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Honorario")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("PagoEm")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCobranca");

                    b.HasIndex("DocumentoCliente");

                    b.HasIndex("Vencimento", "DocumentoCliente")
                        .IsUnique();

                    b.ToTable("Cobrancas");
                });

            modelBuilder.Entity("Conta_Certa.Models.Servico", b =>
                {
                    b.Property<long>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("IdServico");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Conta_Certa.Models.ServicoCobranca", b =>
                {
                    b.Property<long>("IdServicoCobranca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdCobranca")
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdServicoOrigem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("IdServicoCobranca");

                    b.HasIndex("IdServicoOrigem");

                    b.HasIndex("IdCobranca", "IdServicoOrigem");

                    b.ToTable("ServicosCobranca");
                });

            modelBuilder.Entity("Conta_Certa.Models.Cobranca", b =>
                {
                    b.HasOne("Conta_Certa.Models.Cliente", "Cliente")
                        .WithMany("Cobrancas")
                        .HasForeignKey("DocumentoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Conta_Certa.Models.ServicoCobranca", b =>
                {
                    b.HasOne("Conta_Certa.Models.Cobranca", "Cobranca")
                        .WithMany("ServicosCobranca")
                        .HasForeignKey("IdCobranca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Conta_Certa.Models.Servico", null)
                        .WithMany()
                        .HasForeignKey("IdServicoOrigem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cobranca");
                });

            modelBuilder.Entity("Conta_Certa.Models.Cliente", b =>
                {
                    b.Navigation("Cobrancas");
                });

            modelBuilder.Entity("Conta_Certa.Models.Cobranca", b =>
                {
                    b.Navigation("ServicosCobranca");
                });
#pragma warning restore 612, 618
        }
    }
}
